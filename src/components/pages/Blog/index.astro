---
export const prerender = false;

import type { Post } from '@schemas/post';
import Badge from '@components/Badge.astro';
import ViewsIcon from '@components/icons/views.astro';
import XIcon from '@components/icons/x.astro';
import FacebookIcon from '@components/icons/facebook.astro';
import CopyLinkIcon from '@components/icons/link.astro';

interface Props {
  post: Post;
  slug: string;
}

const { post, slug } = Astro.props;

const runtime = Astro.locals.runtime;

// FIXME: The env variables are not being replaced in the build and deploy process
// Maybe a fix: https://docs.astro.build/en/guides/integrations-guide/cloudflare/#cloudflare-runtime
const res = await fetch(
  `https://plausible.io/api/v1/stats/aggregate?site_id=${import.meta.env.PROD ? runtime.env.PLAUSIBLE_SITE_ID : import.meta.env.PLAUSIBLE_SITE_ID}&date=2024-01-01,9999-01-01&filters=event:page%3D%3D%2Fblog%2F${slug}&period=custom&metrics=visitors,pageviews`,
  {
    headers: {
      Authorization: `Bearer ${import.meta.env.PROD ? runtime.env.PLAUSIBLE_TOKEN : import.meta.env.PLAUSIBLE_TOKEN}`,
    },
  }
);

const data = await res.json();
const views = data.results?.pageviews.value;

const title = post.title;
const pubDate = post.pubDate;
---

<>
  <img src={post.image} alt={post.image} class="blog-img" />

  <div class="content">
    <aside class="aside-blog share-content">
      <XIcon id="x-share" class="share-icon" />
      <FacebookIcon id="facebook-share" class="share-icon" />
      <CopyLinkIcon id="copy-link" class="share-icon" />
    </aside>

    <div class="blog-content">
      <h1 class="title">{title}</h1>
      <p class="date"></p>

      <div class="info-container">
        <div class="author-container">
          <img
            src={post.author.img}
            alt={`${post.author.name} profile`}
            class="author-img"
          />
          <p class="author-name">{post.author.name}</p>
        </div>
        <div class="tags-container">
          {post.categories.map((category) => <Badge title={category} />)}
        </div>
      </div>

      <slot />
    </div>

    <span class="aside-blog views-content">
      <ViewsIcon />
      <span class="views">{views || 0}</span>
    </span>
  </div>
</>

<style>
  .blog-img {
    width: 100%;
    object-fit: cover;
    margin-block-end: 50px;

    @media screen and (min-width: 68.75rem) {
      aspect-ratio: 16 / 8;
      margin-block-end: 80px;
    }
  }

  .content {
    position: relative;
    display: flex;
    gap: 2rem;

    @media screen and (min-width: 68.75rem) {
      gap: 110px;
    }
  }

  .aside-blog {
    display: none;
    background-color: var(--primary---green--10--alpha);
    align-items: center;
    position: sticky;
    top: 100px;
    flex-direction: column;
    width: 100px;
    height: fit-content;
    border-radius: 12px;
    padding-block: 38px;

    @media screen and (min-width: 68.75rem) {
      display: flex;
    }
  }

  .share-content {
    gap: 36px;
    padding-inline: 32px;
  }

  .share-icon {
    transition: fill 0.2s ease-in-out;

    &:hover {
      cursor: pointer;
      fill: var(--primary---green--6);
    }
  }

  .views-content {
    gap: 14px;
    padding-inline: 8px;

    span {
      font-weight: 500;
    }
  }

  .blog-content {
    flex: 1;

    .date {
      color: var(--neutrals---black--7);
      margin-block-start: 0.5rem;
      margin-block-end: 0;
    }
  }

  .info-container {
    display: flex;
    flex-direction: column;
    margin-block-start: 28px;
    margin-block-end: 60px;
    gap: 1rem;

    @media screen and (min-width: 68.75rem) {
      flex-direction: row;
    }
  }

  .author-container {
    display: flex;
    align-items: center;
    gap: 1rem;

    .author-img {
      width: 70px;
      height: 70px;
      border-radius: 50%;
      object-fit: cover;
      margin-block-start: 0;
    }

    .author-name {
      font-weight: 700;
      color: var(--neutrals---black--1);
      margin-block-end: 0;
    }
  }

  .tags-container {
    display: flex;
    flex-wrap: wrap;
    flex: 1;
    align-items: center;
    gap: 0.5rem;

    @media screen and (min-width: 68.75rem) {
      justify-content: flex-end;
    }
  }
</style>

<script define:vars={{ title, pubDate }}>
  const date = new Date(pubDate);
  const tz = Intl.DateTimeFormat().resolvedOptions().timeZone;

  const formatted = date.toLocaleDateString(undefined, {
    day: 'numeric',
    month: 'numeric',
    year: 'numeric',
    hour: 'numeric',
    minute: 'numeric',
    timeZone: tz,
  });

  const currentUrl = window.location.href;

  const dateElement = document.querySelector('.date');

  dateElement.textContent = `${formatted}`;

  document.getElementById('copy-link')?.addEventListener('click', () => {
    navigator.clipboard.writeText(currentUrl);
    // TODO: Create own toast component
    // eslint-disable-next-line no-undef
    Toastify({
      text: 'Link copied to clipboard! \u{1F517}',
      gravity: 'bottom',
      position: 'right',
      duration: 2000,
      style: {
        background: 'var(--primary---blue--5)',
        borderRadius: '8px',
      },
    }).showToast();
  });

  document.getElementById('facebook-share')?.addEventListener('click', () => {
    const facebookUrl = `https://www.facebook.com/sharer/sharer.php?display=popup&u=${currentUrl}`;
    window.open(facebookUrl, '_blank');
  });

  document.getElementById('x-share')?.addEventListener('click', () => {
    const twitterUrl = `https://twitter.com/intent/tweet?text=Check out this post: ${title}\n ${currentUrl}`;
    window.open(twitterUrl, '_blank');
  });
</script>
